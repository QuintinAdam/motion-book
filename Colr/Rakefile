# -*- coding: utf-8 -*-
$:.unshift("/Library/RubyMotion/lib")
require 'motion/project/template/ios'
require 'bubble-wrap'
require 'afmotion'

begin
  require 'bundler'
  Bundler.require
rescue LoadError
end

require './lib/app_properties'
props = AppProperties.new

Motion::Project::App.setup do |app|
  # Use `rake config' to see complete project settings.
  # app.name = 'Colr'
  app.name = props.name
  # app.deployment_target = props.deployment_target
  # app.identifier = props.identifier

  app.version = props.version
  app.short_version = props.version #required to be incremented for AppStore

  # app.device_family = props.devices
  #app.icons = props.icons
  #app.provisioning_profile = props.provisioning
  # app.release do
  #   app.codesign_certificate = props.distribution_certificate
  # end
  # app.development do
  #   app.codesign_certificate = props.developer_certificate
  # end
  # include external files
  # app.files += props.render_files(app)

  app.frameworks += props.frameworks
  # app.prerendered_icon = props.prerendered_icon





  # To include your icon files, simply add them to the resources folder
  # array of icons you want to load as your app icons
  # app.icons = ["Icon-72.png", "Icon-144.png", ...]
  # if you don't want apple to add a curve shine effect
  # app.prerendered_icon = true
  # https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/MobileHIG/index.html

  # Any files included in resources will be bundled with your app and accessible in your code
  # For example, adding a face.png file allows us to create a UIImage instance with UIImage.imageNamed("face")

  # All supported .ttf and .otf fonts in resources will be included properly in your app and allow you to use the UIFont.fontWith- Name("MyFont", size:20) method.

  # If you want to grab the contents of an arbitrary file like data.txt, we need to grab its path.
  # path = NSBundle.mainBundle.pathForResource("data", ofType:"txt") data = NSData.dataWithContentsOfFile(path)

  #plist
  # app.info_plist['CFBundleURLTypes'] = [ {
  # 'CFBundleURLName' => 'com.mycomapny.myapp',
  # 'CFBundleURLSchemes' => ['myapp'] }
  # ]

  # more about plist https://developer.apple.com/library/mac/documentation/General/Reference/InfoPlistKeyReference/Introduction/Introduction.html#//apple_ref/doc/uid/TP40009247

  # Apple usually only takes apps built against the most two most recent versions
  # app.sdk_version = "6.0"
  # app.deployment_target = "5.0"

  # needed for deployment
  # app.sdk_version = "6.0"
  # app.deployment_target = "5.1"
  # app.version = "1.0"
  # app.identifier = "com.myappcompany.myawesomeapp"
  # app.provisiong_profile = "/Users/me/profiles/1234.mobileprovision"

  # build settings on a per-mode basis, you can use the development() and release() methods like so:
  # app.development do
    # code runs in dev mode
    # app.version = "1.0.1"
    # app.identifier = "com.myappcompany.myawesomeapp.dev"
  # end

  # app.release do
    # code runs in release mode
    # app.version = "1.0"
  # end

  # full list of options http://www.rubymotion.com/developers/guides/manuals/cocoa/project-management/

  # rake archive:distribution to release

  # we can use the Application Loader, which ships with Xcode to upload our app

  # more
  # book: iOS Recipes
end
